{"version":3,"sources":["components/Document.js","components/OnlineMembers.js","components/Preview.js","constants.js","components/Home.js","components/Login.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["Document","classes","allUsers","Card","className","documentCard","variant","CardContent","Grid","container","spacing","item","xs","List","map","index","color","online","lastSeen","Date","updatedAt","ListItem","key","ListItemText","style","primary","first_name","secondary","toDateString","toTimeString","split","OnlineMembers","onlineUsers","showAvatar","splice","orange","purple","Tooltip","title","last_name","aria-label","Avatar","toUpperCase","showCount","length","avatarClass","Preview","React","useState","open","anchorRef","useRef","ButtonGroup","ref","Button","size","aria-controls","undefined","aria-expanded","aria-haspopup","constants","apiUrl","useStyles","makeStyles","theme","root","flexGrow","display","margin","menuButton","marginRight","palette","getContrastText","deepOrange","backgroundColor","deepPurple","Home","userData","changeStatus","updateUsers","updateOnlineUsers","useEffect","getUsers","socket","openSocket","emit","id","on","result","axios","get","then","data","users","filter","console","log","AppBar","position","Toolbar","Typography","minWidth","padding","bullet","transform","fontSize","pos","marginBottom","forminput","width","signupbtn","marginTop","float","Login","props","email","password","values","changeValues","loginStatus","changeLoginStatus","errorMessage","changeErrorMessage","handleChanges","e","field","obj","target","value","error","Alert","severity","AlertTitle","success","component","TextField","label","fullWidth","onChange","type","onClick","post","res","catch","err","response","message","Divider","loginbtn","Register","registerStatus","changeRegisterStatus","App","appBody","userStatus","changeUserStatus","changeUserData","updateStatus","status","loggedUser","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a93ca794.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nconst Document = ({classes,allUsers}) =>{\r\n    return(\r\n        <div>\r\n\r\n        <Card className={classes.documentCard} variant=\"outlined\" >\r\n        <CardContent>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <div>\r\n            <h1>\r\n              Document title\r\n            </h1>\r\n            <p>\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\r\n            </p>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div>\r\n              <List>\r\n               {\r\n                allUsers.map((item,index)=>{\r\n                  let color = ((item.online==true)?{color:\"green\"}:{color:\"grey\"})\r\n                  let lastSeen = new Date(item.updatedAt)\r\n                  \r\n                  return(\r\n                    <ListItem key={index}>\r\n                    <ListItemText style={color} primary={item.first_name} secondary={(item.online==true)?\"Online\":\"Last seen at :\"+lastSeen.toDateString()+\" \"+lastSeen.toTimeString().split(\" \")[0]} />\r\n                  </ListItem>\r\n                  )\r\n\r\n                })\r\n\r\n               \r\n               }\r\n              </List>\r\n            </div>\r\n          </Grid>\r\n          \r\n          </Grid>\r\n\r\n     \r\n\r\n        </CardContent>\r\n       \r\n        \r\n     \r\n\r\n        </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Document","import React from \"react\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nconst OnlineMembers = ({classes,onlineUsers}) =>{\r\n    let tabs = [...onlineUsers];\r\n    let showAvatar = tabs.splice(0,4).map((item,index)=>{\r\n        let color = (index % 2 ==0)?classes.orange:classes.purple;\r\n        return(\r\n            <div key={index}>\r\n            <Tooltip title={item.first_name+\" \"+item.last_name} aria-label=\"add\" >\r\n           \r\n                <Avatar className={color}>{item.first_name[0].toUpperCase()}</Avatar>\r\n           \r\n            </Tooltip>\r\n            </div>\r\n        )\r\n    }\r\n    )\r\n    let showCount =  <Avatar >+{onlineUsers.length-4}</Avatar>\r\n    return(\r\n        <div className={classes.avatarClass}>\r\n        {showAvatar}\r\n        {(onlineUsers.length > 4)?showCount:\"\"}\r\n\r\n\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OnlineMembers","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport OnlineMembers from \"./OnlineMembers\"\r\n\r\n\r\n\r\nconst Preview = ({classes,onlineUsers,allUsers}) => {\r\n  let options = ['Create a merge commit', 'Squash and merge', 'Rebase and merge'];  \r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n    <Grid item xs={6}>\r\n    <OnlineMembers classes={classes} onlineUsers={onlineUsers}/>\r\n    </Grid>\r\n    <Grid item xs={6}>\r\n    <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n          <Button >Present</Button>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            aria-controls={open ? 'split-button-menu' : undefined}\r\n            aria-expanded={open ? 'true' : undefined}\r\n            aria-label=\"select merge strategy\"\r\n            aria-haspopup=\"menu\"\r\n           \r\n          >\r\n              \r\n            <ArrowDropDownIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n\r\n \r\n    </Grid>\r\n   \r\n  \r\n   \r\n  </Grid>\r\n  );\r\n}\r\n\r\nexport default Preview","const constants = {\r\n    apiUrl : \"https://real-time-document.herokuapp.com/\"\r\n}\r\n\r\nexport default constants","import React from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport axios from \"axios\"\r\nimport openSocket from \"socket.io-client\"\r\nimport Document from \"./Document\"\r\nimport Preview from \"./Preview\"\r\nimport constants from \"../constants\"\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\nroot: {\r\n    flexGrow: 1,\r\n\r\n  },\r\n  avatarClass : {\r\n    display: 'inline-flex',\r\n    '& > *': {\r\n      margin: theme.spacing(-0.8),\r\n    },\r\n   \r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color : \"#FFF\"\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n  documentCard : {\r\n      margin: \"2%\"\r\n  }\r\n \r\n}));\r\n\r\n\r\n\r\nconst Home = ({userData,changeStatus}) =>{\r\n    const classes = useStyles();\r\n    \r\n   \r\n    const [allUsers,updateUsers] = React.useState([])\r\n    const [onlineUsers,updateOnlineUsers] = React.useState([])\r\n    \r\n\r\nReact.useEffect(()=>{\r\ngetUsers()\r\nconst socket = openSocket(constants.apiUrl)\r\n if(userData[\"_id\"])\r\n socket.emit('send-socket-id', { id: userData[\"_id\"] });\r\n  socket.on('online', result => {\r\n    getUsers()\r\n  });\r\n  socket.on('user-disconnected',result=>{\r\n    getUsers()\r\n  })\r\n \r\n},[])\r\n\r\nconst getUsers = () =>{\r\n  axios.get(constants.apiUrl+'users')\r\n  .then((result)=>{\r\n    updateUsers(result.data.users)\r\n    let online = result.data.users.filter((item)=>item.online)\r\n    updateOnlineUsers(online)\r\n    console.log(online)\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                Realtime Document\r\n            </Typography>\r\n          \r\n            \r\n            </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n        <Card  variant=\"outlined\" style={{backgroundColor: '#282c34',margin: \"0 20%\"}}>\r\n        <CardContent>\r\n           \r\n         \r\n         <Preview classes={classes} onlineUsers={onlineUsers} />\r\n\r\n\r\n        </CardContent>\r\n  \r\n        </Card>\r\n        <Document classes={classes} onlineUsers={onlineUsers} allUsers={allUsers}/>\r\n        \r\n       \r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport axios from 'axios';\r\nimport constants from \"../constants\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      minWidth: 275,\r\n      margin : \"10%\",\r\n      padding: \"5%\"\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    forminput : {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n          },\r\n    },\r\n    signupbtn : {\r\n      marginTop : \"10px\",\r\n      float : \"right\"\r\n    }\r\n\r\n  }));\r\n  \r\n\r\nconst Login = (props) =>{\r\n    const classes = useStyles();\r\n    const [values,changeValues] = React.useState({email:\"\",password:\"\"});\r\n    const [loginStatus,changeLoginStatus] = React.useState(2)\r\n    const [errorMessage,changeErrorMessage]=React.useState(\"\")\r\n\r\n    const handleChanges = (e,field) =>{\r\n      let obj =values;\r\n      obj[field]=e.target.value;\r\n      changeValues(obj)\r\n    \r\n    }\r\n\r\n    const loginUser = ()=>{\r\n        if(values.email == \"\" || values.password == \"\")\r\n        {\r\n          changeLoginStatus(0)\r\n          changeErrorMessage(\"Please fill in email and password\")\r\n        }\r\n        else\r\n        {\r\n          changeLoginStatus(1)\r\n          axios.post(constants.apiUrl+'login',values)\r\n          .then((res)=>{\r\n            props.changeStatus('loggedIn',res)\r\n          })\r\n          .catch(err=>{\r\n            changeLoginStatus(0)\r\n            if(err.response)\r\n            changeErrorMessage(err.response.data.message)\r\n          })\r\n        }\r\n    }\r\n\r\n\r\n   const error =<Alert severity=\"error\">\r\n   <AlertTitle>Error</AlertTitle>\r\n    {errorMessage}\r\n   </Alert>;\r\n       const success =<Alert severity=\"success\">\r\n       <AlertTitle>Success</AlertTitle>\r\n       Logging in user.......\r\n       </Alert>;\r\n\r\n    return(\r\n        <div>\r\n              <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                {(loginStatus == 0)?error:((loginStatus == 1)?success:\"\")}\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      Login\r\n                    </Typography>\r\n                    <div >\r\n                    <TextField\r\n                    id=\"filled-full-width\"\r\n                    label=\"Email *\"\r\n                    style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    onChange={(e, value) =>  handleChanges(e,\"email\") }\r\n                    \r\n                    />\r\n                    <TextField\r\n                    id=\"filled-full-width\"\r\n                    label=\"Password *\"\r\n                    style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    onChange={(e, value) =>  handleChanges(e,\"password\") }\r\n                    type=\"password\"\r\n                    />\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>loginUser()}>\r\n                    Submit\r\n                    </Button>\r\n                   \r\n                </CardContent>\r\n                     <Divider />\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>props.changeStatus('register')} className={classes.signupbtn}>Signup</Button>\r\n\r\n                </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport axios from 'axios';\r\nimport constants from \"../constants\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      minWidth: 275,\r\n      margin : \"10%\",\r\n      padding : \"5%\"\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    forminput : {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n          },\r\n    },\r\n    loginbtn: {\r\n      marginTop : \"10px\",\r\n      float : \"right\"\r\n    }\r\n\r\n  }));\r\n  \r\n\r\nconst Register = (props) =>{\r\n    const classes = useStyles();\r\n    const [values,changeValues] = React.useState({first_name:\"\",last_name:\"\",email:\"\",password:\"\"});\r\n    const [registerStatus,changeRegisterStatus] = React.useState(2)\r\n    const [errorMessage,changeErrorMessage]=React.useState(\"\")\r\n\r\n    const handleChanges = (e,field) =>{\r\n       let obj =values;\r\n      obj[field]=e.target.value;\r\n      changeValues(obj)\r\n      \r\n    }\r\n    const registerUser = () =>{\r\n       if(values.first_name == \"\"  || values.email == \"\" ||  values.password == \"\")\r\n       {\r\n         changeRegisterStatus(0)\r\n         changeErrorMessage(\"Please fill all the required fields\")\r\n       }\r\n       else{\r\n         axios.post(constants.apiUrl+\"auth/createUser\",values)\r\n         .then((res)=>{\r\n           \r\n           changeRegisterStatus(1)\r\n         }).catch((err)=>{\r\n           changeRegisterStatus(0)\r\n           if(err.response)\r\n           changeErrorMessage(err.response.data.message)\r\n         })\r\n\r\n         \r\n       }\r\n    }\r\n\r\n\r\n    const success =<Alert severity=\"success\">\r\n    <AlertTitle>Success</AlertTitle>\r\n    User successfully registered. Login to continue\r\n    </Alert>;\r\n    const error =<Alert severity=\"error\">\r\n    <AlertTitle>Error</AlertTitle>\r\n     {errorMessage}\r\n    </Alert>;\r\n    \r\n   \r\n    return(\r\n        <div>\r\n\r\n              <Card className={classes.root} variant=\"outlined\">\r\n\r\n\r\n                <CardContent>\r\n                  \r\n                    {(registerStatus == 1)?success:(registerStatus == 0)?error:\"\"}\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      Register\r\n                    </Typography>\r\n                    <div >\r\n                    <TextField\r\n                    id=\"filled-full-width\"\r\n                    label=\"First name *\"\r\n                    style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    onChange={(e, value) =>  handleChanges(e,\"first_name\") }/>\r\n                    \r\n                    <TextField\r\n                    id=\"filled-full-width\"\r\n                    label=\"Last name\"\r\n                    style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    onChange={(e, value) =>  handleChanges(e,\"last_name\") }\r\n                    />\r\n                    <TextField\r\n                    id=\"filled-full-width\"\r\n                    label=\"Email *\"\r\n                    style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    onChange={(e, value) =>  handleChanges(e,\"email\") }\r\n                    \r\n                    />\r\n                    <TextField\r\n                    id=\"filled-full-width\"\r\n                    label=\"Password *\"\r\n                    style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    onChange={(e, value) =>  handleChanges(e,\"password\") }\r\n                    type=\"password\"\r\n                    />\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>registerUser()}>\r\n                    Submit\r\n                    </Button>\r\n                </CardContent>\r\n                <Divider />\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>props.changeStatus('login')} className={classes.loginbtn}>Login</Button>\r\n\r\n                </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\n\n\nfunction App() {\n  const [userStatus,changeUserStatus] = React.useState('login')\n  const [userData,changeUserData] = React.useState([])\n  \n  const updateStatus = (status,data=[]) =>{\n    if(data.data)\n    changeUserData(data.data.loggedUser)\n    changeUserStatus(status)\n  }\n\n  let appBody;\n  if(userStatus == 'login')\n    appBody = <Login  changeStatus={updateStatus}/>\n  else if(userStatus == 'register')\n    appBody = <Register  changeStatus={updateStatus}/>\n  else if(userStatus == 'loggedIn')\n    appBody = <Home  changeStatus={updateStatus} userData={userData}/>    \n  return (\n    <div className=\"App\">\n     {appBody}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}